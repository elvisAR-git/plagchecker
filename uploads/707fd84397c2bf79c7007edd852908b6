'use strict';

var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var crypto = require('crypto');
var autopopulate = require('mongoose-autopopulate');

var schemaOptions = {
    toObject: { virtuals: true },
    toJSON: { virtuals: true },
    timestamps: {createdAt: 'create_date', updatedAt: 'last_updated'}
};

var BlogSchema = new Schema({
    saas_id:{type: Schema.Types.ObjectId, ref: 'Saas', autopopulate:false}, // SaaS ID is 0 if its belongs BISMART
    blog_category_id:{type: Schema.Types.ObjectId, ref: 'BlogCategory', autopopulate:true},
    title: {type: String, default: null},
    slug: {type: String, default: null},
    short_desc: {type: String, default: null},
    content :{type: String, default: null}, //will contains HTML and images in it.
    featured_banner: {type: String, default: null},
    post_type: {type: String, default: null},//video, image, text
    tag_cloud: [{type: String, default: null}],
    meta_keywords: {type: String, default: null},
    meta_desc: {type: String, default: null},
	status: {type:Boolean, default: false},
    is_deleted: { type: Boolean, default: false },
}, schemaOptions);

BlogSchema.plugin(autopopulate);

BlogSchema.pre('save', function (next) { this.last_updated = new Date(); if (!this.isNew) { return next(); } next(); });

module.exports = mongoose.model('Blog', BlogSchema);

