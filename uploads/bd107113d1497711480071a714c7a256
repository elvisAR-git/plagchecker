'use strict';

var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var autopopulate = require('mongoose-autopopulate');

var schemaOptions = {
    toObject: { virtuals: true },
    toJSON: { virtuals: true },
    timestamps: {createdAt: 'create_date', updatedAt: 'last_updated'}
};

var insurance_kycSchema = new Schema({
    order_id:{type: Schema.Types.ObjectId, ref: 'order', autopopulate:true},
    saas_id:{type: Schema.Types.ObjectId, ref: 'Saas', autopopulate:true}, // SaaS ID is 0 if its belongs BISMART
    user_id:{type: Schema.Types.ObjectId, ref: 'User', autopopulate:true},
    category_id:{type: Schema.Types.ObjectId, ref: 'ProductCategory', autopopulate:true},
    package_id:{type: Schema.Types.ObjectId, ref: 'saas_product_package', autopopulate:true},
    postalAddress: { type: String, default: '' }, //term, motor, accident, funeral
    mobileNo: { type: String, default: '' }, //term, motor, accident, funeral
    email: { type: String, default: '' }, //term, motor
    occupation: { type: String, default: '' }, //term, motor, accident, funeral

    kraPinNo: { type: String, default: '' }, //term, motor, accident, funeral
    idNo: { type: String, default: '' }, //motor //term //funeral
    idDoc: { type: String, default: '' }, //term, motor, funeral //image
    kraPinDoc: { type: String, default: '' }, //term, motor, accident, funeral //image

    //home insurance
    nameOfProposer: { type: String, default: '' }, //accident, funeral
    telephoneNo: { type: String, default: '' }, //accident, funeral
    financialName: { type: String, default: '' },
    physicalAddress: { type: String, default: '' },
    buildingInformation: [
        {
            buildingName: { type: String, default: '' },
            location: { type: String, default: '' },
            houseNo: { type: String, default: '' },
            street: { type: String, default: '' },
            country: { type: String, default:     '' },
            road: { type: String, default: '' },
            town: { type: String, default: '' },
            wallsConstruction: { type: String, default: '' },
            roofConstruction: { type: String, default: '' },
            sumInsured: { type: String, default: '' },
        }
    ],
    contents: [
        {
            itemDescription: { type: String, default: '' },
            value: { type: String, default: '' },
        }
    ],
    allRisks: [
        {
            itemDescription: { type: String, default: '' },
            make: { type: String, default: '' },
            model: { type: String, default: '' },
            serialNumber: { type: String, default: '' },
            priceOfVehicle: { type: Number, default: 0 },
        }
    ],
    wibaDomesticStaff: [
        {
            staffMemberName: { type: String, default: '' },
        }
    ],
    petInsurance: [
        {
            animal: { type: String, default: '' },
            age: { type: Number, default: 0 },
            value: { type: Number, default: 0 },
        }
    ],

    //Term life insurance
    applicantName: { type: String, default: '' },
    nationality: { type: String, default: '' },
    postalCode: { type: String, default: '' },
    dateOfBirth: { type: Date, default: new Date() }, //motor, accident, funeral
    sumAssured: { type: String, default: '' },
    schoolName: { type: String, default: '' },
    declarationOfGoodHealth: { type: String, default: '' },
    residentialAddress: { type: String, default: '' },
    schoolType: { type: String, default: '' },
    schoolLevel: { type: String, default: '' },
    schoolCounty: { type: String, default: '' },
    beneficiaryNomination:[
        {
            name: { type: String, default: '' },
            allocation: { type: String, default: '' },
            dateOfBirth: { type: Date, default: new Date() },
            birthCertificateId: { type: String, default: '' }, //image
        }
    ],
    nominee: //object
        {
            fullName: { type: String, default: '' },
            relationShip: { type: String, default: '' },
            dateOfBirth: { type: Date, default: new Date() },
           // eSignatureId: { type: String, default: '' }, //image
        }
    ,
    attachDocuments: //object
        {
            copyOfId: { type: String, default: '' }, //image
            pinCertificateId: { type: String, default: 0 }, //image
            nomineeId: { type: String, default: 0 }, //image
        },

    //motor
    agencyBrokerCode: { type: String, default: '' },
    customerCorporateName: { type: String, default: '' },
    financierName: { type: String, default: '' },
    drivingLicNo: { type: String, default: '' },
    drivingExp: { type: String, default: '' },
    accidentLosses: { type: String, default: '' },
    isNCD: { type: Boolean, default: false },
    ncdDocId: { type: String, default: '' }, //image
    hasAnyInsCmp:{
        declinedProposal: { type: Boolean, default: false },
        refusedPolicy: { type: Boolean, default: false },
        increasePremium: { type: Boolean, default: false },
        extraDetails: { type: String, default: '' },
    },
    isVehicleYour: { type: Boolean, default: false },
    vehicleExtraDetails: { type: String, default: '' },
    previousInsurer: { type: String, default: '' },
    policyNumber: { type: String, default: '' },
    vehicleUsedFor: {
        socialDomestic: { type: Boolean, default: false },
        passengers: { type: Boolean, default: false },
        business: { type: Boolean, default: false },
        extraDetailsOfUse: { type: String, default: '' },
    },
    drivenByOther: { type: Boolean, default: false },
    otherDriverInfo: { type: String, default: '' },
    isAntiTheft: { type: Boolean, default: false },
    documentsCopy: { //all image
        copyOfId: { type: String, default: '' },
        logBook: { type: String, default: '' },
        copyOfPin: { type: String, default: '' },
        validDrivingLic: { type: String, default: '' },
        regCerti: { type: String, default: '' },
    },

    //Accident Insurance
    coverFrom: { type: Date, default: new Date() }, //funeral
    coverTo: { type: Date, default: new Date() }, //funeral
    isPreviouslyHeldAccidentPolicy: { type: Boolean, default: false }, //boolean
    nameOfPreviousInsurer: { type: String, default: '' }, //if above true then give it to in html
    selectedCoverOption: { type: String, default: '' },
    premium: { type: String, default: '' },
    children: [{
        name: {type: String, default: ''},
        dateOfBirth: {type: Date, default: new Date()},
        birthCertificate: {type: String, default: ''}, //image
    }],
    areYouInGoodHealth: { type: Boolean, default: false }, //boolean
    goodHealthExtraDetail: { type: String, default: '' }, //if above true then give it to in html
    beneficiary: [{ //funeral
        name: {type: String, default: ''},
        idNo: {type: String, default: ''},
        mobileNo: {type: String, default: ''},
        relationShip: {type: String, default: ''},
        address: {type: String, default: ''},
        postalCode: {type: String, default: ''},
        town: {type: String, default: ''},
        percentage: {type: String, default: ''},
    }],
    spouseDetails: {
        name: {type: String, default: ''},
        idNo: {type: String, default: ''},
        mobileNo: {type: String, default: ''},
        relationShip: {type: String, default: ''},
        address: {type: String, default: ''},
        postalCode: {type: String, default: ''},
        town: {type: String, default: ''},
    },

    //funeral expense insurance KYC
    insurerDetails: [
        {
            name: { type: String, default: '' },
            relationShip: { type: String, default: '' },
            dateOfBirth: { type: Date, default: new Date() },
            idNo: { type: String, default: '' },
            birthCertificate: { type: String, default: '' }, //image
            mobileNo: { type: String, default: '' },
        }
    ],

    is_deleted: { type: Boolean, default: false }
}, schemaOptions);

insurance_kycSchema.plugin(autopopulate);

insurance_kycSchema.pre('save', function (next) { this.last_updated = new Date(); if (!this.isNew) { return next(); } next(); });

module.exports = mongoose.model('insurance_kyc', insurance_kycSchema);
