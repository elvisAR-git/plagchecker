'use strict';

var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var autopopulate = require('mongoose-autopopulate');

var schemaOptions = {
    toObject: { virtuals: true },
    toJSON: { virtuals: true },
    timestamps: {createdAt: 'create_date', updatedAt: 'last_updated'}
};
var saas_product_packageSchema = new Schema({
    saas_id:{type: Schema.Types.ObjectId, ref: 'Saas', autopopulate:true}, // SaaS ID is 0 if its belongs BISMART
    product_id:{type: Schema.Types.ObjectId, ref: 'Product', autopopulate:false},
    saas_allowed_category_id:{type: Schema.Types.ObjectId, ref: 'ProductCategory', autopopulate:false},
    name:{type: String, default: null},
    description:{type: String, default: null},
    total_price:{type: String, default: '0'},
    commissionType :{ type: String,default: 'FLAT' },
    commissionValue  :{type: String, default: '0'},
    isAllowOnBismart: {type:Boolean, default: true},
    status: {type:Boolean, default: true},
    isCustomize : {type:Boolean, default:false},
    is_deleted: { type: Boolean, default: false },
}, schemaOptions);

saas_product_packageSchema.plugin(autopopulate);

saas_product_packageSchema.plugin(autopopulate);

saas_product_packageSchema.pre('save', function (next) { this.last_updated = new Date(); if (!this.isNew) { return next(); } next(); });

module.exports = mongoose.model('saas_product_package', saas_product_packageSchema);	
