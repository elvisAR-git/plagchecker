'use strict';

var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var autopopulate = require('mongoose-autopopulate');

var schemaOptions = {
    toObject: { virtuals: true },
    toJSON: { virtuals: true },
    timestamps: {createdAt: 'create_date', updatedAt: 'last_updated'}
};

var SaasSearchInquiryLogSchema = new Schema({
    saas_id:{type: Schema.Types.ObjectId, ref: 'Saas', autopopulate:true}, // SaaS ID is 0 if its belongs BISMART
    user_id:{type: Schema.Types.ObjectId, ref: 'User', autopopulate:true},
    category_id:{type: Schema.Types.ObjectId, ref: 'ProductCategory', autopopulate:true},
    search_input:{type: String, default: ""},
    status:{type: String,
        enum: ["pending", "contacted","closed","lost", null],
        default: 'pending',
    },
    comment:{type: String, default: ""},
    is_deleted: { type: Boolean, default: false },
}, schemaOptions);

SaasSearchInquiryLogSchema.plugin(autopopulate);

SaasSearchInquiryLogSchema.pre('save', function (next) { this.last_updated = new Date(); if (!this.isNew) { return next(); } next(); });

module.exports = mongoose.model('SaasSearchInquiryLog', SaasSearchInquiryLogSchema);
