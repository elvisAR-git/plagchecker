'use strict';

var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var autopopulate = require('mongoose-autopopulate');

var schemaOptions = {
    toObject: { virtuals: true },
    toJSON: { virtuals: true },
    timestamps: {createdAt: 'create_date', updatedAt: 'last_updated'}
};

var health_insurance_premium_masterSchema = new Schema({
    saas_id:{type: Schema.Types.ObjectId, ref: 'Saas', autopopulate:true}, // SaaS ID is 0 if its belongs BISMART
    package_id:{type: Schema.Types.ObjectId, ref: 'saas_product_package', autopopulate:true},
    product_id:{type: Schema.Types.ObjectId, ref: 'Product', autopopulate:true},
    category_id:{type: Schema.Types.ObjectId, ref: 'ProductCategory', autopopulate:true},

    //age wise data fetch
    //age 26, cover amount 2lakh -> match it to type(outpatient/inpatient/optical/dental/maternity)
    individual: {
        outpatient: {type: [JSON], default: []},
        inpatient: {type: [JSON], default: []},
        optical: {type: [JSON], default: []},
        dental: {type: [JSON], default: []},
        maternity: {type: [JSON], default: []}
    },
    group: {
        outpatient: {type: [JSON], default: []},
        inpatient: {type: [JSON], default: []},
        optical: {type: [JSON], default: []},
        dental: {type: [JSON], default: []},
        maternity: {type: [JSON], default: []}
    },
    family: {
        outpatient: {type: [JSON], default: []},
        inpatient: {type: [JSON], default: []},
        optical: {type: [JSON], default: []},
        dental: {type: [JSON], default: []},
        maternity: {type: [JSON], default: []},
        personWiseOutpatient: {type: [JSON], default: []},
        personWiseInpatient: {type: [JSON], default: []},
        isPersonWise: { type: Boolean, default: false }
    },

    is_deleted: { type: Boolean, default: false }
}, schemaOptions);

health_insurance_premium_masterSchema.plugin(autopopulate);

health_insurance_premium_masterSchema.pre('save', function (next) { this.last_updated = new Date(); if (!this.isNew) { return next(); } next(); });

module.exports = mongoose.model('health_insurance_premium_master', health_insurance_premium_masterSchema);
