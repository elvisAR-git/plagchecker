'use strict';

var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var crypto = require('crypto');
var autopopulate = require('mongoose-autopopulate');

var schemaOptions = {
    toObject: { virtuals: true },
    toJSON: { virtuals: true },
    timestamps: {createdAt: 'create_date', updatedAt: 'last_updated'}
};

var saas_featured_categoriesSchema = new Schema({
    saas_id:{type: Schema.Types.ObjectId, ref: 'Saas', autopopulate:false}, // SaaS ID is 0 if its belongs BISMART
    category_id :{type: Schema.Types.ObjectId, ref: 'ProductCategory', autopopulate:true},
    display_order: { type: Number, default: false },
	status: {type:Boolean, default: false},
    is_deleted: { type: Boolean, default: false },
}, schemaOptions);

saas_featured_categoriesSchema.plugin(autopopulate);

saas_featured_categoriesSchema.pre('save', function (next) { this.last_updated = new Date(); if (!this.isNew) { return next(); } next(); });

saas_featured_categoriesSchema.pre('save', async function (next) {
    if(this.isNew) {
        let existingCategory = await mongoose.model("saas_featured_categories").findOne({ category_id: this.category_id,saas_id:this.saas_id, is_deleted: false })
        if(existingCategory)
        {
            next(new Error('The specified category is already in use.'));
        }
    }
});

module.exports = mongoose.model('saas_featured_categories', saas_featured_categoriesSchema);
