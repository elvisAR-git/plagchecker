'use strict';

var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var autopopulate = require('mongoose-autopopulate');

var schemaOptions = {
    toObject: { virtuals: true },
    toJSON: { virtuals: true },
    timestamps: {createdAt: 'create_date', updatedAt: 'last_updated'}
};
const status = Object.freeze({
    pending: "pending",
    confirmed: "confirmed",
    cancelled: "cancelled"
});
var agentCommissionSchema = new Schema({
    saas_id: {type: Schema.Types.ObjectId, ref: 'Saas', autopopulate:true}, // SaaS ID is 0 if its belongs BISMART
    user_id : {type: Schema.Types.ObjectId, ref: 'User', autopopulate:true},
    amount: {type:String, default: null},
    totalCommission:  {type:String, default: '0'}, //used after b2b completed
    agent_code: {type:String, default: null}, //unique agent code
    status: { type: String,enum: Object.values(status), default: 'pending' },
    is_deleted: {type: Boolean, default: false },
}, schemaOptions);

agentCommissionSchema.plugin(autopopulate);

agentCommissionSchema.pre('save', function (next) { this.last_updated = new Date(); if (!this.isNew) { return next(); } next(); });

module.exports = mongoose.model('agentCommission', agentCommissionSchema);





  