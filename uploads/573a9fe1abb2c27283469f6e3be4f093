'use strict';

var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var autopopulate = require('mongoose-autopopulate');

var schemaOptions = {
    toObject: { virtuals: true },
    toJSON: { virtuals: true },
    timestamps: {createdAt: 'create_date', updatedAt: 'last_updated'}
};

var AgentInformationSchema = new Schema({
    saas_id: {type: Schema.Types.ObjectId, ref: 'Saas', autopopulate:true}, // SaaS ID is 0 if its belongs BISMART
    user_id : {type: Schema.Types.ObjectId, ref: 'User', autopopulate:true},
    first_name: {type:String, default: null},
    last_name:  {type:String, default: null},
    agent_code: {type:String, default: null}, //unique agent code
    mobile_no : {type: String, default : null},
    upload_id:  {type:String, default: null},
    upload_IRA_license:  {type:String, default: null},
    profile_photo:  {type:String, default: null},
    mpesa_number:  {type:String, default: null},
    account_number:  {type:String, default: null},
    bank_name:  {type:String, default: null},
    bank_branch:  {type:String, default: null},
    status: {type:Boolean, default: false},
    is_deleted: {type: Boolean, default: false },
}, schemaOptions);

AgentInformationSchema.plugin(autopopulate);

AgentInformationSchema.pre('save', function (next) { this.last_updated = new Date(); if (!this.isNew) { return next(); } next(); });

module.exports = mongoose.model('AgentInformation', AgentInformationSchema);	





